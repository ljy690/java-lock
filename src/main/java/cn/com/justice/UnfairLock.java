package main.java.cn.com.justice;

/**
 * 非公平锁：
 * 多个线程加锁时直接尝试获取锁，获取不到才会到等待队列的队尾等待。
 * 但如果此时锁刚好可用，那么这个线程可以无需阻塞直接获取到锁，所以非公平锁有可能出现后申请锁的线程先获取锁的场景。
 * 非公平锁的优点是可以减少唤起线程的开销，整体的吞吐效率高，因为线程有几率不阻塞直接获得锁，CPU不必唤醒所有线程。
 * 缺点是处于等待队列中的线程可能会饿死，或者等很久才会获得锁。
 */
public class UnfairLock {

}
